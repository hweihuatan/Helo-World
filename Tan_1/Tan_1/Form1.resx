<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        By7v7pJJJiP/2Q==
</value>
  </data>
</root>