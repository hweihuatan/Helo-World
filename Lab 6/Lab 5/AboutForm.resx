<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NaKAWdJ2ADkjGG3JGOhspRkIKARBQIJtQh//2Q==
</value>
  </data>
</root>